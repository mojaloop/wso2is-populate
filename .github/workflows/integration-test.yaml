name: Integration test
on: push
jobs:
  integration-test:
    timeout-minutes: 10
    runs-on: ubuntu-20.04

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install k3d
      run: |-
        curl -Lo k3d https://github.com/rancher/k3d/releases/download/v4.4.1/k3d-linux-amd64
        sudo install k3d /usr/local/bin/

    - name: Install Skaffold
      run: |-
        curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/v1.21.0/skaffold-linux-amd64
        sudo install skaffold /usr/local/bin/

    - name: Install kubefwd
      run: |-
        curl -Lo kubefwd.tar.gz https://github.com/txn2/kubefwd/releases/download/1.18.1/kubefwd_Linux_x86_64.tar.gz
        tar xf kubefwd.tar.gz
        sudo install kubefwd /usr/local/bin/

    - name: Start cluster
      run:
        k3d cluster create
          --kubeconfig-update-default
          --kubeconfig-switch-context
          --image=rancher/k3s:v1.20.5-k3s1
          int-test

    - name: Deploy
      run: skaffold run --profile integration-test-authorisation

    - name: Wait for wso2is to come up
      run: |-
        time kubectl wait --for=condition=available --timeout=300s deploy/wso2is
        time kubectl rollout status -w --timeout=300s deploy/wso2is

    # - name: Curl wso2is
    #   run: |-
    #     set -euxo pipefail
    #     date -Ins
    #     kubectl run curl --image curlimages/curl --command -- sleep 70s
    #     kubectl wait --for=condition=ready pod/curl
    #     time kubectl exec -it curl -- curl -siu 'admin:admin' -k 'https://wso2is:9443'
    #     time kubectl exec -it curl -- curl -siu 'admin:admin' -k 'https://wso2is:9443/scim2/Groups'
    #     date -Ins
    #
    # - name: Print WSO2 logs
    #   run: kubectl logs deploy/wso2is
    #
    # - name: Print resources
    #   run: kubectl get svc,deploy,configmap,job,pod -A
    #
    # - name: Tail job logs
    #   run: kubectl logs -f jobs/wso2is-populate
    #
    # - name: DNS
    #   run: |-
    #     set -euxo pipefail
    #     date -Ins
    #     kubectl run dnsutils --image gcr.io/kubernetes-e2e-test-images/dnsutils:1.3 --command -- sleep 1m
    #     kubectl wait --for=condition=ready pod/dnsutils
    #     time kubectl exec -it dnsutils -- nslookup kubernetes.default
    #     time kubectl exec -it dnsutils -- nslookup wso2is
    #     date -Ins
    #
    # - name: Curl wso2is
    #   run: |-
    #     set -euxo pipefail
    #     date -Ins
    #     kubectl run curl2 --image curlimages/curl --command -- sleep 70s
    #     kubectl wait --for=condition=ready pod/curl2
    #     time kubectl exec -it curl2 -- curl -siu 'admin:admin' -k 'https://wso2is:9443'
    #     time kubectl exec -it curl2 -- curl -siu 'admin:admin' -k 'https://wso2is:9443/scim2/Groups'
    #     date -Ins
    #
    # - name: Print resources
    #   run: kubectl get svc,deploy,configmap,job,pod -A

    # This normally happens about a minute after wso2is comes up, but sometimes takes a bit longer.
    # We wait for the entire duration of the workflow job- why not..?
    - name: Wait for populate to complete
      run: time kubectl wait --timeout=600s --for=condition=complete jobs/wso2is-populate

    - name: Forward cluster services
      run: sudo -E kubefwd services --context k3d-int-test

    # TODO: make this a little more dynamic- we should modify the password to be something random
    # each time we run this test, then use it here. If we do it in `src/imports/users.json` before
    # `skaffold run`, skaffold should pick up in the built wso2is-populate image.
    - name: Check we can log in with portaladmin
      run: |-
        curl -L -X POST 'http://portal-backend/login'
          --H 'Content-Type: application/json'
          --data-raw '{
            "username": "portaladmin",
            "password": "mcvV2KYw9eKPqNagjGy6"
          }'

    - name: Check we can log in with portaluser
      run: |-
        curl -L -X POST 'http://portal-backend/login'
          --H 'Content-Type: application/json'
          --data-raw '{
            "username": "portaluser",
            "password": "mcvV2KYw9eKPqNagjGy5"
          }'

    # - name: Ensure we can update NDC with portaladmin
    #   run:

    # - name: Ensure we cannot update NDC with portaluser
    #   run:

    # - name: Print resources
    #   run: kubectl get svc,deploy,configmap,job,pod -A


